<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="53" passed="50" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-11T21:50:00 EST" name="Default suite" finished-at="2025-02-11T21:50:16 EST" duration-ms="16555">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-02-11T21:50:00 EST" name="Default test" finished-at="2025-02-11T21:50:16 EST" duration-ms="16555">
      <class name="runner.testRunnerTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:00 EST" name="setUpClass" finished-at="2025-02-11T21:50:00 EST" duration-ms="366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2898cd46]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:00 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:04 EST" duration-ms="4228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to Get All User List with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["GetAllUsers"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:04 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:05 EST" duration-ms="211" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to Get All User List without endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["GetAllUsers"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:05 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:05 EST" duration-ms="310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is unable to Get All User List with invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["GetAllUsers"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:05 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:05 EST" duration-ms="105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to Get  all user with No Auth"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["GetAllUsers"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:05 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:05 EST" duration-ms="192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to Get  all user with Invalid Basic Auth"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["GetAllUsers"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:05 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:06 EST" duration-ms="502" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with all valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:06 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:06 EST" duration-ms="214" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with only mandatory fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <500>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:101)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at utils.apiHelper.validateStatusCode(apiHelper.java:222)
at stepDefinitions.createUserStepDefinition.admin_receives_status_for_create_user_mandatory(createUserStepDefinition.java:55)
at âœ½.Admin receives "201" "Created" Status for create user mandatory(file:///Users/mathumathibalakrishnan/eclipse/Mathumathi_2024/2025_Team04_RestAssured_BDD/src/test/resources/features/02_createUser.feature:14)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:06 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:06 EST" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:06 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:06 EST" duration-ms="216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with invalid content Type"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:06 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:07 EST" duration-ms="200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with invalid request type"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:07 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:07 EST" duration-ms="364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with same contact number"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:07 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:07 EST" duration-ms="223" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with same email"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:07 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:07 EST" duration-ms="105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with No Auth"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:07 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:07 EST" duration-ms="103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with invalid basic auth"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:07 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:08 EST" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with first name as numeric"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:08 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:08 EST" duration-ms="297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with Empty first name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:08 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:08 EST" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with last name as numeric"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:08 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:08 EST" duration-ms="205" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with Empty last name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <409>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <409>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:101)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at utils.apiHelper.validateStatusCode(apiHelper.java:222)
at stepDefinitions.createUserStepDefinition.admin_receives_status_with_error_message(createUserStepDefinition.java:269)
at âœ½.Admin receives "400" "Bad Request" Status with error message(file:///Users/mathumathibalakrishnan/eclipse/Mathumathi_2024/2025_Team04_RestAssured_BDD/src/test/resources/features/02_createUser.feature:69)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:08 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:09 EST" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with contact number less than ten numbers"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:09 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:09 EST" duration-ms="198" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with contact number as alphanumeric"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:09 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:09 EST" duration-ms="217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with empty contact number"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:09 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:09 EST" duration-ms="216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with contact number greater than ten numbers"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:09 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:09 EST" duration-ms="198" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with invalid  email format"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:09 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:10 EST" duration-ms="284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with empty email"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:10 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:10 EST" duration-ms="297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with invalid plot number"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:10 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:10 EST" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with empty plot number"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:10 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:10 EST" duration-ms="196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with Street as numeric"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:10 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:11 EST" duration-ms="220" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with Street as empty"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:11 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:11 EST" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with State as numeric"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:11 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:11 EST" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with State as empty"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:11 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:11 EST" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with country as numeric"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:11 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:12 EST" duration-ms="233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with country as empty"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:12 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:12 EST" duration-ms="284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with zipcode as alphanumeric"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:12 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:12 EST" duration-ms="225" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to create a user with zipcode as empty"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Create User API"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <201>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <201>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:101)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at utils.apiHelper.validateStatusCode(apiHelper.java:222)
at stepDefinitions.createUserStepDefinition.admin_receives_status_with_error_message(createUserStepDefinition.java:269)
at âœ½.Admin receives "400" "Bad Request" Status with error message(file:///Users/mathumathibalakrishnan/eclipse/Mathumathi_2024/2025_Team04_RestAssured_BDD/src/test/resources/features/02_createUser.feature:149)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:12 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:12 EST" duration-ms="203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to GET user by valid USER ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get User By UserID API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:12 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:13 EST" duration-ms="191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to GET user by invalid USER ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get User By UserID API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:13 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:13 EST" duration-ms="196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to GET user by user id with invalid request type"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get User By UserID API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:13 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:13 EST" duration-ms="217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to GET user by USER ID with invaid Basic Auth"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get User By UserID API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:13 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:13 EST" duration-ms="106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to GET user by USER ID with No Auth"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get User By UserID API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:13 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:13 EST" duration-ms="361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to update a user with all valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Update User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:13 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:14 EST" duration-ms="215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to update a user with No Auth"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Update User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:14 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:14 EST" duration-ms="338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to update a user with invalid basic auth"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Update User API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:14 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:14 EST" duration-ms="214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to GET user by valid USER FirstName"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get User By UserFirstName API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:14 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:14 EST" duration-ms="203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to GET user by invalid USER FirstName"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get User By UserFirstName API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:14 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:15 EST" duration-ms="206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to GET user by user FirstName with invalid request type"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get User By UserFirstName API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:15 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:15 EST" duration-ms="303" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to GET user by USER FirstName with invaid Basic Auth"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get User By UserFirstName API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:15 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:15 EST" duration-ms="95" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to GET user by USER FirstName with No Auth"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get User By UserFirstName API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:15 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:15 EST" duration-ms="204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to DELETE user by valid USER ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete User By UserID API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:15 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:15 EST" duration-ms="217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to DELETE user by already deleted USER ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete User By UserID API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:15 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:16 EST" duration-ms="221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to DELETE user by invalid USER ID"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete User By UserID API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:16 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:16 EST" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to DELETE user by user id with invalid request type"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete User By UserID API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:16 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:16 EST" duration-ms="206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to DELETE user by USER ID with invaid Basic Auth"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete User By UserID API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:16 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-11T21:50:16 EST" duration-ms="101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if Admin is able to DELETE user by USER ID with No Auth"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Delete User By UserID API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.testRunnerTest@7502291e]" started-at="2025-02-11T21:50:16 EST" name="tearDownClass" finished-at="2025-02-11T21:50:16 EST" duration-ms="88" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.testRunnerTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
