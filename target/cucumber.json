[{"line":4,"elements":[{"start_timestamp":"2025-02-08T03:34:47.992Z","before":[{"result":{"duration":256883000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":6,"name":"Check if Admin is able to Get All User List with valid credentials","description":"","id":"getallusers;check-if-admin-is-able-to-get-all-user-list-with-valid-credentials","after":[{"result":{"duration":268000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":67177000,"status":"passed"},"line":7,"name":"Admin set the GET request","match":{"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_set_the_get_request()"},"keyword":"Given "},{"result":{"duration":2716620000,"status":"passed"},"line":8,"name":"Admin sends HTTPS Request with endpoint","match":{"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_sends_https_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":136653000,"status":"passed"},"line":9,"name":"Admin receives \"200\" \"OK\" Status Code","match":{"arguments":[{"val":"\"200\"","offset":15},{"val":"\"OK\"","offset":21}],"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_receives_status_code(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:51.238Z","before":[{"result":{"duration":391000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":11,"name":"Check if Admin is able to Get All User List without endpoint","description":"","id":"getallusers;check-if-admin-is-able-to-get-all-user-list-without-endpoint","after":[{"result":{"duration":115000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1266000,"status":"passed"},"line":12,"name":"Admin set the GET request","match":{"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_set_the_get_request()"},"keyword":"Given "},{"result":{"duration":205510000,"status":"passed"},"line":13,"name":"Admin sends HTTPS Request without endpoint","match":{"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_sends_https_request_without_endpoint()"},"keyword":"When "},{"result":{"duration":246000,"status":"passed"},"line":14,"name":"Admin receives \"404\" \"Not Found\" Status Code","match":{"arguments":[{"val":"\"404\"","offset":15},{"val":"\"Not Found\"","offset":21}],"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_receives_status_code(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:51.454Z","before":[{"result":{"duration":180000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":16,"name":"Check if Admin is unable to Get All User List with invalid endpoint","description":"","id":"getallusers;check-if-admin-is-unable-to-get-all-user-list-with-invalid-endpoint","after":[{"result":{"duration":484000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":346000,"status":"passed"},"line":17,"name":"Admin set the GET request","match":{"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_set_the_get_request()"},"keyword":"Given "},{"result":{"duration":223501000,"status":"passed"},"line":18,"name":"Admin sends HTTPS Request with invalid endpoint","match":{"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_sends_https_request_with_invalid_endpoint()"},"keyword":"When "},{"result":{"duration":527000,"status":"passed"},"line":19,"name":"Admin receives \"404\" \"Not Found\" Status Code","match":{"arguments":[{"val":"\"404\"","offset":15},{"val":"\"Not Found\"","offset":21}],"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_receives_status_code(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:51.690Z","before":[{"result":{"duration":217000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":21,"name":"Check if Admin is able to Get  all user with No Auth","description":"","id":"getallusers;check-if-admin-is-able-to-get--all-user-with-no-auth","after":[{"result":{"duration":132000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":4915000,"status":"passed"},"line":22,"name":"Admin set the GET request without Auth","match":{"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_set_the_get_request_without_auth()"},"keyword":"Given "},{"result":{"duration":87709000,"status":"passed"},"line":23,"name":"Admin sends HTTPS Request with endpoint","match":{"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_sends_https_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":214000,"status":"passed"},"line":24,"name":"Admin receives \"401\" \"Unauthorized\" Status Code","match":{"arguments":[{"val":"\"401\"","offset":15},{"val":"\"Unauthorized\"","offset":21}],"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_receives_status_code(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:51.789Z","before":[{"result":{"duration":153000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":26,"name":"Check if Admin is able to Get  all user with Invalid Basic Auth","description":"","id":"getallusers;check-if-admin-is-able-to-get--all-user-with-invalid-basic-auth","after":[{"result":{"duration":171000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":468000,"status":"passed"},"line":27,"name":"Admin set the GET request with Invalid Basic Auth","match":{"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_set_the_get_request_with_invalid_basic_auth()"},"keyword":"Given "},{"result":{"duration":167687000,"status":"passed"},"line":28,"name":"Admin sends HTTPS Request with endpoint","match":{"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_sends_https_request_with_endpoint()"},"keyword":"When "},{"result":{"duration":291000,"status":"passed"},"line":29,"name":"Admin receives \"401\" \"Unauthorized\" Status Code","match":{"arguments":[{"val":"\"401\"","offset":15},{"val":"\"Unauthorized\"","offset":21}],"location":"stepDefinitions.GetAllUsersStepDefinitions.admin_receives_status_code(java.lang.String,java.lang.String)"},"keyword":"Then "}]}],"name":"GetAllUsers","description":"","id":"getallusers","keyword":"Feature","uri":"file:src/test/resources/features/01_getAllUsers.feature","tags":[]},{"line":3,"elements":[{"start_timestamp":"2025-02-08T03:34:51.967Z","before":[{"result":{"duration":276000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":6,"name":"Check if Admin is able to create a user with all valid credentials","description":"","id":"create-user-api;check-if-admin-is-able-to-create-a-user-with-all-valid-credentials","after":[{"result":{"duration":90000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1557000,"status":"passed"},"line":7,"name":"Admin set the POST request with the valid request body","match":{"location":"stepDefinitions.createUserStepDefinition.admin_set_the_post_request_with_the_valid_request_body_and_valid_endpoint()"},"keyword":"Given "},{"result":{"duration":582315000,"status":"passed"},"line":8,"name":"Admin sends HTTPS Request and request Body with endpoint","match":{"location":"stepDefinitions.createUserStepDefinition.admin_sends_https_request_and_request_body_with_endpoint()"},"keyword":"When "},{"result":{"duration":380000,"status":"passed"},"line":9,"name":"Admin receives \"201\" \"Created\" Status","match":{"arguments":[{"val":"\"201\"","offset":15},{"val":"\"Created\"","offset":21}],"location":"stepDefinitions.createUserStepDefinition.admin_receives_status(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:52.558Z","before":[{"result":{"duration":156000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":11,"name":"Check if Admin is able to create a user with only mandatory fields","description":"","id":"create-user-api;check-if-admin-is-able-to-create-a-user-with-only-mandatory-fields","after":[{"result":{"duration":200000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":485000,"status":"passed"},"line":12,"name":"Admin set the POST request with the valid request body","match":{"location":"stepDefinitions.createUserStepDefinition.admin_set_the_post_request_with_the_valid_request_body_and_valid_endpoint()"},"keyword":"Given "},{"result":{"duration":177738000,"status":"passed"},"line":13,"name":"Admin sends HTTPS Request and request Body with mandatory","match":{"location":"stepDefinitions.createUserStepDefinition.admin_sends_https_request_and_request_body_with_mandatory()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [201] but found [500]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\n\tat stepDefinitions.createUserStepDefinition.admin_receives_status_for_create_user(createUserStepDefinition.java:93)\n\tat âœ½.Admin receives \"201\" \"Created\" Status for create user(file:///Users/mathumathibalakrishnan/eclipse/Mathumathi_2024/2025_Team04_RestAssured_BDD/src/test/resources/features/02_createUser.feature:14)\n","duration":6879000,"status":"failed"},"line":14,"name":"Admin receives \"201\" \"Created\" Status for create user","match":{"arguments":[{"val":"\"201\"","offset":15},{"val":"\"Created\"","offset":21}],"location":"stepDefinitions.createUserStepDefinition.admin_receives_status_for_create_user(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:52.754Z","before":[{"result":{"duration":180000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":16,"name":"Check if Admin is able to create a user with invalid endpoint","description":"","id":"create-user-api;check-if-admin-is-able-to-create-a-user-with-invalid-endpoint","after":[{"result":{"duration":147000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":440000,"status":"passed"},"line":17,"name":"Admin set the POST request with the valid request body","match":{"location":"stepDefinitions.createUserStepDefinition.admin_set_the_post_request_with_the_valid_request_body_and_valid_endpoint()"},"keyword":"Given "},{"result":{"duration":230497000,"status":"passed"},"line":18,"name":"Admin sends HTTPS Request and request Body with invalid endpoint","match":{"location":"stepDefinitions.createUserStepDefinition.admin_sends_https_request_and_request_body_with_invalid_endpoint()"},"keyword":"When "},{"result":{"duration":190000,"status":"passed"},"line":19,"name":"Admin receives \"404\" \"Not Found\" Status","match":{"arguments":[{"val":"\"404\"","offset":15},{"val":"\"Not Found\"","offset":21}],"location":"stepDefinitions.createUserStepDefinition.admin_receives_status(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:52.994Z","before":[{"result":{"duration":167000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":21,"name":"Check if Admin is able to create a user with invalid content Type","description":"","id":"create-user-api;check-if-admin-is-able-to-create-a-user-with-invalid-content-type","after":[{"result":{"duration":199000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":512000,"status":"passed"},"line":22,"name":"Admin set the POST request with the invalid contentType","match":{"location":"stepDefinitions.createUserStepDefinition.admin_set_the_post_request_with_the_invalid_content_type()"},"keyword":"Given "},{"result":{"duration":177886000,"status":"passed"},"line":23,"name":"Admin sends HTTPS Request and request Body with invalid content type","match":{"location":"stepDefinitions.createUserStepDefinition.admin_sends_https_request_and_request_body_with_invalid_content_type()"},"keyword":"When "},{"result":{"duration":249000,"status":"passed"},"line":24,"name":"Admin receives \"415\" \"Unsupported Media Type\" Status","match":{"arguments":[{"val":"\"415\"","offset":15},{"val":"\"Unsupported Media Type\"","offset":21}],"location":"stepDefinitions.createUserStepDefinition.admin_receives_status(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:53.181Z","before":[{"result":{"duration":207000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":26,"name":"Check if Admin is able to create a user with invalid request type","description":"","id":"create-user-api;check-if-admin-is-able-to-create-a-user-with-invalid-request-type","after":[{"result":{"duration":168000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":529000,"status":"passed"},"line":27,"name":"Admin set the POST request with the valid request body","match":{"location":"stepDefinitions.createUserStepDefinition.admin_set_the_post_request_with_the_valid_request_body_and_valid_endpoint()"},"keyword":"Given "},{"result":{"duration":193804000,"status":"passed"},"line":28,"name":"Admin sends HTTPS Request and request Body with invalid request type","match":{"location":"stepDefinitions.createUserStepDefinition.admin_sends_https_request_and_request_body_with_invalid_request_type()"},"keyword":"When "},{"result":{"duration":245000,"status":"passed"},"line":29,"name":"Admin receives \"405\" \"Not Allowed\" Status","match":{"arguments":[{"val":"\"405\"","offset":15},{"val":"\"Not Allowed\"","offset":21}],"location":"stepDefinitions.createUserStepDefinition.admin_receives_status(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:53.385Z","before":[{"result":{"duration":200000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":31,"name":"Check if Admin is able to create a user with same contact number","description":"","id":"create-user-api;check-if-admin-is-able-to-create-a-user-with-same-contact-number","after":[{"result":{"duration":167000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":485000,"status":"passed"},"line":32,"name":"Admin set the POST request with the valid request body","match":{"location":"stepDefinitions.createUserStepDefinition.admin_set_the_post_request_with_the_valid_request_body_and_valid_endpoint()"},"keyword":"Given "},{"result":{"duration":184878000,"status":"passed"},"line":33,"name":"Admin sends HTTPS Request and request Body with same contact number","match":{"location":"stepDefinitions.createUserStepDefinition.admin_sends_https_request_and_request_body_with_same_contact_number()"},"keyword":"When "},{"result":{"duration":7448000,"status":"passed"},"line":34,"name":"Admin receives \"409\" \"Conflict\" Status with contact message","match":{"arguments":[{"val":"\"409\"","offset":15},{"val":"\"Conflict\"","offset":21}],"location":"stepDefinitions.createUserStepDefinition.admin_receives_status_with_contact_message(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:53.586Z","before":[{"result":{"duration":168000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":36,"name":"Check if Admin is able to create a user with same email","description":"","id":"create-user-api;check-if-admin-is-able-to-create-a-user-with-same-email","after":[{"result":{"duration":206000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":389000,"status":"passed"},"line":37,"name":"Admin set the POST request with the valid request body","match":{"location":"stepDefinitions.createUserStepDefinition.admin_set_the_post_request_with_the_valid_request_body_and_valid_endpoint()"},"keyword":"Given "},{"result":{"duration":178086000,"status":"passed"},"line":38,"name":"Admin sends HTTPS Request and request Body with same email","match":{"location":"stepDefinitions.createUserStepDefinition.admin_sends_https_request_and_request_body_with_same_email()"},"keyword":"When "},{"result":{"duration":8486000,"status":"passed"},"line":39,"name":"Admin receives \"409\" \"Conflict\" Status with email message","match":{"arguments":[{"val":"\"409\"","offset":15},{"val":"\"Conflict\"","offset":21}],"location":"stepDefinitions.createUserStepDefinition.admin_receives_status_with_email_message(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:53.781Z","before":[{"result":{"duration":183000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":41,"name":"Check if Admin is able to create a user with No Auth","description":"","id":"create-user-api;check-if-admin-is-able-to-create-a-user-with-no-auth","after":[{"result":{"duration":103000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":613000,"status":"passed"},"line":42,"name":"Admin set the POST request with the valid request body with no Auth","match":{"location":"stepDefinitions.createUserStepDefinition.admin_set_the_post_request_with_the_valid_request_body_with_no_auth()"},"keyword":"Given "},{"result":{"duration":91902000,"status":"passed"},"line":43,"name":"Admin sends HTTPS Request and request Body with no or invalid auth","match":{"location":"stepDefinitions.createUserStepDefinition.admin_sends_https_request_and_request_body_with_no_or_invalid_auth()"},"keyword":"When "},{"result":{"duration":156000,"status":"passed"},"line":44,"name":"Admin receives \"401\" \"Unauthorized\" Status","match":{"arguments":[{"val":"\"401\"","offset":15},{"val":"\"Unauthorized\"","offset":21}],"location":"stepDefinitions.createUserStepDefinition.admin_receives_status(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:53.879Z","before":[{"result":{"duration":150000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":46,"name":"Check if Admin is able to create a user with invalid basic auth","description":"","id":"create-user-api;check-if-admin-is-able-to-create-a-user-with-invalid-basic-auth","after":[{"result":{"duration":185000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":388000,"status":"passed"},"line":47,"name":"Admin set the POST request with the valid request body with invalid basic Auth","match":{"location":"stepDefinitions.createUserStepDefinition.admin_set_the_post_request_with_the_valid_request_body_with_invalid_basic_auth()"},"keyword":"Given "},{"result":{"duration":172257000,"status":"passed"},"line":48,"name":"Admin sends HTTPS Request and request Body with no or invalid auth","match":{"location":"stepDefinitions.createUserStepDefinition.admin_sends_https_request_and_request_body_with_no_or_invalid_auth()"},"keyword":"When "},{"result":{"duration":212000,"status":"passed"},"line":49,"name":"Admin receives \"401\" \"Unauthorized\" Status","match":{"arguments":[{"val":"\"401\"","offset":15},{"val":"\"Unauthorized\"","offset":21}],"location":"stepDefinitions.createUserStepDefinition.admin_receives_status(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:54.059Z","before":[{"result":{"duration":218000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":53,"name":"Check if Admin is able to create a user with first name as numeric","description":"","id":"create-user-api;check-if-admin-is-able-to-create-a-user-with-first-name-as-numeric","after":[{"result":{"duration":181000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":496000,"status":"passed"},"line":54,"name":"Admin set the POST request","match":{"location":"stepDefinitions.createUserStepDefinition.admin_set_the_post_request()"},"keyword":"Given "},{"result":{"duration":180897000,"status":"passed"},"line":55,"name":"Admin sends HTTPS Request and request Body with first name as numeric","match":{"location":"stepDefinitions.createUserStepDefinition.admin_sends_https_request_and_request_body_with_first_name_as_numeric()"},"keyword":"When "},{"result":{"duration":365000,"status":"passed"},"line":56,"name":"Admin receives \"400\" \"Bad Request\" Status with error message","match":{"arguments":[{"val":"\"400\"","offset":15},{"val":"\"Bad Request\"","offset":21}],"location":"stepDefinitions.createUserStepDefinition.admin_receives_status_with_error_message(java.lang.String,java.lang.String)"},"keyword":"Then "}]}],"name":"Create User API","description":"","id":"create-user-api","keyword":"Feature","uri":"file:src/test/resources/features/02_createUser.feature","tags":[]},{"line":3,"elements":[{"start_timestamp":"2025-02-08T03:34:54.249Z","before":[{"result":{"duration":197000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":5,"name":"Check if Admin is able to GET user by valid USER ID","description":"","id":"get-user-by-userid-api;check-if-admin-is-able-to-get-user-by-valid-user-id","after":[{"result":{"duration":164000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":470000,"status":"passed"},"line":6,"name":"Admin set the GET request by user id","match":{"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_set_the_get_request_by_user_id()"},"keyword":"Given "},{"result":{"duration":185504000,"status":"passed"},"line":7,"name":"Admin sends the GET HTTP request by User ID","match":{"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_sends_the_get_http_request_by_user_id()"},"keyword":"When "},{"result":{"duration":926000,"status":"passed"},"line":8,"name":"Admin receives the \"200\" \"OK\" Status code with valid user details","match":{"arguments":[{"val":"\"200\"","offset":19},{"val":"\"OK\"","offset":25}],"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_receives_the_status_code_with_valid_user_details(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:54.443Z","before":[{"result":{"duration":182000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":10,"name":"Check if Admin is able to GET user by invalid USER ID","description":"","id":"get-user-by-userid-api;check-if-admin-is-able-to-get-user-by-invalid-user-id","after":[{"result":{"duration":126000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":340000,"status":"passed"},"line":11,"name":"Admin set the GET request by user id","match":{"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_set_the_get_request_by_user_id()"},"keyword":"Given "},{"result":{"duration":179708000,"status":"passed"},"line":12,"name":"Admin sends HTTPS Request with invalid userID","match":{"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_sends_https_request_with_invalid_user_id()"},"keyword":"When "},{"result":{"duration":566000,"status":"passed"},"line":13,"name":"Admin receives the \"404\" \"Not Found\" Status code with valid user details","match":{"arguments":[{"val":"\"404\"","offset":19},{"val":"\"Not Found\"","offset":25}],"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_receives_the_status_code_with_valid_user_details(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:54.642Z","before":[{"result":{"duration":159000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":15,"name":"Check if Admin is able to GET user by user id with invalid request type","description":"","id":"get-user-by-userid-api;check-if-admin-is-able-to-get-user-by-user-id-with-invalid-request-type","after":[{"result":{"duration":158000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":349000,"status":"passed"},"line":16,"name":"Admin set the GET request by user id","match":{"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_set_the_get_request_by_user_id()"},"keyword":"Given "},{"result":{"duration":184641000,"status":"passed"},"line":17,"name":"Admin sends HTTPS Request with invalid requestType","match":{"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_sends_https_request_with_invalid_request_type()"},"keyword":"When "},{"result":{"duration":259000,"status":"passed"},"line":18,"name":"Admin receives the \"405\" \"Method Not Allowed\" Status code with valid user details","match":{"arguments":[{"val":"\"405\"","offset":19},{"val":"\"Method Not Allowed\"","offset":25}],"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_receives_the_status_code_with_valid_user_details(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:54.835Z","before":[{"result":{"duration":146000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":20,"name":"Check if Admin is able to GET user by USER ID with invaid Basic Auth","description":"","id":"get-user-by-userid-api;check-if-admin-is-able-to-get-user-by-user-id-with-invaid-basic-auth","after":[{"result":{"duration":115000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":352000,"status":"passed"},"line":21,"name":"Admin set the GET request by user id with invalid basic auth","match":{"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_set_the_get_request_by_user_id_with_invalid_basic_auth()"},"keyword":"Given "},{"result":{"duration":172927000,"status":"passed"},"line":22,"name":"Admin sends the GET HTTP request by User ID","match":{"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_sends_the_get_http_request_by_user_id()"},"keyword":"When "},{"result":{"duration":121000,"status":"passed"},"line":23,"name":"Admin receives the \"401\" \"Unauthorized\" Status code with valid user details","match":{"arguments":[{"val":"\"401\"","offset":19},{"val":"\"Unauthorized\"","offset":25}],"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_receives_the_status_code_with_valid_user_details(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:55.012Z","before":[{"result":{"duration":117000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":25,"name":"Check if Admin is able to GET user by USER ID with No Auth","description":"","id":"get-user-by-userid-api;check-if-admin-is-able-to-get-user-by-user-id-with-no-auth","after":[{"result":{"duration":154000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":428000,"status":"passed"},"line":26,"name":"Admin set the GET request by user id with No Auth","match":{"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_set_the_get_request_by_user_id_with_no_auth()"},"keyword":"Given "},{"result":{"duration":90607000,"status":"passed"},"line":27,"name":"Admin sends the GET HTTP request by User ID","match":{"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_sends_the_get_http_request_by_user_id()"},"keyword":"When "},{"result":{"duration":127000,"status":"passed"},"line":28,"name":"Admin receives the \"401\" \"Unauthorized\" Status code with valid user details","match":{"arguments":[{"val":"\"401\"","offset":19},{"val":"\"Unauthorized\"","offset":25}],"location":"stepDefinitions.getUserByUserIDStepDefinitions.admin_receives_the_status_code_with_valid_user_details(java.lang.String,java.lang.String)"},"keyword":"Then "}]}],"name":"Get User By UserID API","description":"","id":"get-user-by-userid-api","keyword":"Feature","uri":"file:src/test/resources/features/03_getUserByUserID.feature","tags":[]},{"line":3,"elements":[{"start_timestamp":"2025-02-08T03:34:55.108Z","before":[{"result":{"duration":132000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":6,"name":"Check if Admin is able to update a user with all valid credentials","description":"","id":"update-user-api;check-if-admin-is-able-to-update-a-user-with-all-valid-credentials","after":[{"result":{"duration":186000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":386000,"status":"passed"},"line":7,"name":"Admin set the PUT request with the valid request body and valid Endpoint","match":{"location":"stepDefinitions.updateUserStepDefinition.admin_set_the_put_request_with_the_valid_request_body_and_valid_endpoint()"},"keyword":"Given "},{"result":{"duration":208521000,"status":"passed"},"line":8,"name":"Admin sends HTTPS Request with request Body","match":{"location":"stepDefinitions.updateUserStepDefinition.admin_sends_https_request_with_request_body()"},"keyword":"When "},{"result":{"duration":1644000,"status":"passed"},"line":9,"name":"Admin receives \"200\" \"OK\" Status for update user","match":{"arguments":[{"val":"\"200\"","offset":15},{"val":"\"OK\"","offset":21}],"location":"stepDefinitions.updateUserStepDefinition.admin_receives_status_for_update_user(java.lang.String,java.lang.String)"},"keyword":"Then "}]}],"name":"Update User API","description":"","id":"update-user-api","keyword":"Feature","uri":"file:src/test/resources/features/04_updateUser.feature","tags":[]},{"line":3,"elements":[{"start_timestamp":"2025-02-08T03:34:55.324Z","before":[{"result":{"duration":170000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":5,"name":"Check if Admin is able to GET user by valid USER FirstName","description":"","id":"get-user-by-userfirstname-api;check-if-admin-is-able-to-get-user-by-valid-user-firstname","after":[{"result":{"duration":178000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":442000,"status":"passed"},"line":6,"name":"Admin set the GET request by user firstName","match":{"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_set_the_get_request_by_user_first_name()"},"keyword":"Given "},{"result":{"duration":189536000,"status":"passed"},"line":7,"name":"Admin sends the GET HTTP request by User FirstName","match":{"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_sends_the_get_http_request_by_user_first_name()"},"keyword":"When "},{"result":{"duration":451000,"status":"passed"},"line":8,"name":"Admin receives the \"200\" \"OK\" Status code for UserFirstName","match":{"arguments":[{"val":"\"200\"","offset":19},{"val":"\"OK\"","offset":25}],"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_receives_the_status_code_for_user_first_name(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:55.521Z","before":[{"result":{"duration":249000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":10,"name":"Check if Admin is able to GET user by invalid USER FirstName","description":"","id":"get-user-by-userfirstname-api;check-if-admin-is-able-to-get-user-by-invalid-user-firstname","after":[{"result":{"duration":200000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":512000,"status":"passed"},"line":11,"name":"Admin set the GET request by user firstName","match":{"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_set_the_get_request_by_user_first_name()"},"keyword":"Given "},{"result":{"duration":192520000,"status":"passed"},"line":12,"name":"Admin sends HTTPS Request with invalid userfirstName","match":{"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_sends_https_request_with_invalid_userfirst_name()"},"keyword":"When "},{"result":{"duration":172000,"status":"passed"},"line":13,"name":"Admin receives the \"404\" \"Not Found\" Status code for UserFirstName","match":{"arguments":[{"val":"\"404\"","offset":19},{"val":"\"Not Found\"","offset":25}],"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_receives_the_status_code_for_user_first_name(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:55.721Z","before":[{"result":{"duration":201000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":15,"name":"Check if Admin is able to GET user by user FirstName with invalid request type","description":"","id":"get-user-by-userfirstname-api;check-if-admin-is-able-to-get-user-by-user-firstname-with-invalid-request-type","after":[{"result":{"duration":196000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":363000,"status":"passed"},"line":16,"name":"Admin set the GET request by user firstName","match":{"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_set_the_get_request_by_user_first_name()"},"keyword":"Given "},{"result":{"duration":193777000,"status":"passed"},"line":17,"name":"Admin sends HTTPS Request with invalid requestType by User firstName","match":{"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_sends_https_request_with_invalid_request_type_by_user_first_name()"},"keyword":"When "},{"result":{"duration":265000,"status":"passed"},"line":18,"name":"Admin receives the \"405\" \"Method Not Allowed\" Status code for UserFirstName","match":{"arguments":[{"val":"\"405\"","offset":19},{"val":"\"Method Not Allowed\"","offset":25}],"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_receives_the_status_code_for_user_first_name(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:55.922Z","before":[{"result":{"duration":209000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":20,"name":"Check if Admin is able to GET user by USER FirstName with invaid Basic Auth","description":"","id":"get-user-by-userfirstname-api;check-if-admin-is-able-to-get-user-by-user-firstname-with-invaid-basic-auth","after":[{"result":{"duration":181000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":477000,"status":"passed"},"line":21,"name":"Admin set the GET request by user firstName with invalid basic auth","match":{"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_set_the_get_request_by_user_first_name_with_invalid_basic_auth()"},"keyword":"Given "},{"result":{"duration":181419000,"status":"passed"},"line":22,"name":"Admin sends the GET HTTP request by User FirstName","match":{"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_sends_the_get_http_request_by_user_first_name()"},"keyword":"When "},{"result":{"duration":463000,"status":"passed"},"line":23,"name":"Admin receives the \"401\" \"Unauthorized\" Status code for UserFirstName","match":{"arguments":[{"val":"\"401\"","offset":19},{"val":"\"Unauthorized\"","offset":25}],"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_receives_the_status_code_for_user_first_name(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:56.111Z","before":[{"result":{"duration":214000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":25,"name":"Check if Admin is able to GET user by USER FirstName with No Auth","description":"","id":"get-user-by-userfirstname-api;check-if-admin-is-able-to-get-user-by-user-firstname-with-no-auth","after":[{"result":{"duration":139000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":576000,"status":"passed"},"line":26,"name":"Admin set the GET request by user firstName with No Auth","match":{"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_set_the_get_request_by_user_first_name_with_no_auth()"},"keyword":"Given "},{"result":{"duration":93183000,"status":"passed"},"line":27,"name":"Admin sends the GET HTTP request by User FirstName","match":{"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_sends_the_get_http_request_by_user_first_name()"},"keyword":"When "},{"result":{"duration":209000,"status":"passed"},"line":28,"name":"Admin receives the \"401\" \"Unauthorized\" Status code for UserFirstName","match":{"arguments":[{"val":"\"401\"","offset":19},{"val":"\"Unauthorized\"","offset":25}],"location":"stepDefinitions.getUserByFirstNameStepDefinition.admin_receives_the_status_code_for_user_first_name(java.lang.String,java.lang.String)"},"keyword":"Then "}]}],"name":"Get User By UserFirstName API","description":"","id":"get-user-by-userfirstname-api","keyword":"Feature","uri":"file:src/test/resources/features/05_getUserByUserFirstName.feature","tags":[]},{"line":3,"elements":[{"start_timestamp":"2025-02-08T03:34:56.211Z","before":[{"result":{"duration":139000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":5,"name":"Check if Admin is able to DELETE user by valid USER ID","description":"","id":"delete-user-by-userid-api;check-if-admin-is-able-to-delete-user-by-valid-user-id","after":[{"result":{"duration":159000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":311000,"status":"passed"},"line":6,"name":"Admin set the DELETE request by user id","match":{"location":"stepDefinitions.deleteUserStepDefinition.admin_set_the_delete_request_by_user_id()"},"keyword":"Given "},{"result":{"duration":181654000,"status":"passed"},"line":7,"name":"Admin sends the DELETE HTTP request by User ID","match":{"location":"stepDefinitions.deleteUserStepDefinition.admin_sends_the_delete_http_request_by_user_id()"},"keyword":"When "},{"result":{"duration":6990000,"status":"passed"},"line":8,"name":"Admin receives the \"200\" \"OK\" Status code with message","match":{"arguments":[{"val":"\"200\"","offset":19},{"val":"\"OK\"","offset":25}],"location":"stepDefinitions.deleteUserStepDefinition.admin_receives_the_status_code_with_message(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:56.404Z","before":[{"result":{"duration":142000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":10,"name":"Check if Admin is able to DELETE user by already deleted USER ID","description":"","id":"delete-user-by-userid-api;check-if-admin-is-able-to-delete-user-by-already-deleted-user-id","after":[{"result":{"duration":146000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":272000,"status":"passed"},"line":11,"name":"Admin set the DELETE request by user id","match":{"location":"stepDefinitions.deleteUserStepDefinition.admin_set_the_delete_request_by_user_id()"},"keyword":"Given "},{"result":{"duration":179897000,"status":"passed"},"line":12,"name":"Admin sends DELETE HTTPS Request with already deleted userID","match":{"location":"stepDefinitions.deleteUserStepDefinition.admin_sends_delete_https_request_with_already_deleted_user_id()"},"keyword":"When "},{"result":{"duration":183000,"status":"passed"},"line":13,"name":"Admin receives the \"404\" \"Not Found\" Status","match":{"arguments":[{"val":"\"404\"","offset":19},{"val":"\"Not Found\"","offset":25}],"location":"stepDefinitions.deleteUserStepDefinition.admin_receives_the_status(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:56.589Z","before":[{"result":{"duration":154000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":15,"name":"Check if Admin is able to DELETE user by invalid USER ID","description":"","id":"delete-user-by-userid-api;check-if-admin-is-able-to-delete-user-by-invalid-user-id","after":[{"result":{"duration":182000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":229000,"status":"passed"},"line":16,"name":"Admin set the DELETE request by user id","match":{"location":"stepDefinitions.deleteUserStepDefinition.admin_set_the_delete_request_by_user_id()"},"keyword":"Given "},{"result":{"duration":184415000,"status":"passed"},"line":17,"name":"Admin sends DELETE HTTPS Request with invalid userID","match":{"location":"stepDefinitions.deleteUserStepDefinition.admin_sends_delete_https_request_with_invalid_user_id()"},"keyword":"When "},{"result":{"duration":156000,"status":"passed"},"line":18,"name":"Admin receives the \"404\" \"Not Found\" Status","match":{"arguments":[{"val":"\"404\"","offset":19},{"val":"\"Not Found\"","offset":25}],"location":"stepDefinitions.deleteUserStepDefinition.admin_receives_the_status(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:56.779Z","before":[{"result":{"duration":168000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":20,"name":"Check if Admin is able to DELETE user by user id with invalid request type","description":"","id":"delete-user-by-userid-api;check-if-admin-is-able-to-delete-user-by-user-id-with-invalid-request-type","after":[{"result":{"duration":1623000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":505000,"status":"passed"},"line":21,"name":"Admin set the DELETE request by user id","match":{"location":"stepDefinitions.deleteUserStepDefinition.admin_set_the_delete_request_by_user_id()"},"keyword":"Given "},{"result":{"duration":190614000,"status":"passed"},"line":22,"name":"Admin sends HTTPS Request with invalid requestType by userID","match":{"location":"stepDefinitions.deleteUserStepDefinition.admin_sends_https_request_with_invalid_request_type_by_user_id()"},"keyword":"When "},{"result":{"duration":4888000,"status":"passed"},"line":23,"name":"Admin receives the \"405\" \"Method Not Allowed\" Status","match":{"arguments":[{"val":"\"405\"","offset":19},{"val":"\"Method Not Allowed\"","offset":25}],"location":"stepDefinitions.deleteUserStepDefinition.admin_receives_the_status(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:56.985Z","before":[{"result":{"duration":214000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":25,"name":"Check if Admin is able to DELETE user by USER ID with invaid Basic Auth","description":"","id":"delete-user-by-userid-api;check-if-admin-is-able-to-delete-user-by-user-id-with-invaid-basic-auth","after":[{"result":{"duration":179000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":443000,"status":"passed"},"line":26,"name":"Admin set the DELETE request by user id with invalid basic auth","match":{"location":"stepDefinitions.deleteUserStepDefinition.admin_set_the_delete_request_by_user_id_with_invalid_basic_auth()"},"keyword":"Given "},{"result":{"duration":174147000,"status":"passed"},"line":27,"name":"Admin sends the DELETE HTTP request by User ID","match":{"location":"stepDefinitions.deleteUserStepDefinition.admin_sends_the_delete_http_request_by_user_id()"},"keyword":"When "},{"result":{"duration":148000,"status":"passed"},"line":28,"name":"Admin receives the \"401\" \"Unauthorized\" Status","match":{"arguments":[{"val":"\"401\"","offset":19},{"val":"\"Unauthorized\"","offset":25}],"location":"stepDefinitions.deleteUserStepDefinition.admin_receives_the_status(java.lang.String,java.lang.String)"},"keyword":"Then "}]},{"start_timestamp":"2025-02-08T03:34:57.167Z","before":[{"result":{"duration":211000,"status":"passed"},"match":{"location":"hooks.hooks.setup()"}}],"line":30,"name":"Check if Admin is able to DELETE user by USER ID with No Auth","description":"","id":"delete-user-by-userid-api;check-if-admin-is-able-to-delete-user-by-user-id-with-no-auth","after":[{"result":{"duration":106000,"status":"passed"},"match":{"location":"hooks.hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":686000,"status":"passed"},"line":31,"name":"Admin set the DELETE request by user id with No Auth","match":{"location":"stepDefinitions.deleteUserStepDefinition.admin_set_the_delete_request_by_user_id_with_no_auth()"},"keyword":"Given "},{"result":{"duration":84606000,"status":"passed"},"line":32,"name":"Admin sends the DELETE HTTP request by User ID","match":{"location":"stepDefinitions.deleteUserStepDefinition.admin_sends_the_delete_http_request_by_user_id()"},"keyword":"When "},{"result":{"duration":99000,"status":"passed"},"line":33,"name":"Admin receives the \"401\" \"Unauthorized\" Status","match":{"arguments":[{"val":"\"401\"","offset":19},{"val":"\"Unauthorized\"","offset":25}],"location":"stepDefinitions.deleteUserStepDefinition.admin_receives_the_status(java.lang.String,java.lang.String)"},"keyword":"Then "}]}],"name":"Delete User By UserID API","description":"","id":"delete-user-by-userid-api","keyword":"Feature","uri":"file:src/test/resources/features/06_deleteUserByUserID.feature","tags":[]}]