[{"line":3,"elements":[{"start_timestamp":"2025-02-08T23:25:31.252Z","before":[{"result":{"duration":261629000,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":6,"name":"Check if Admin is able to create a user with all valid credentials","description":"","id":"create-user-api;check-if-admin-is-able-to-create-a-user-with-all-valid-credentials","after":[{"result":{"duration":153000,"status":"passed"},"match":{"location":"hooks.Hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":67047000,"status":"passed"},"line":7,"name":"Admin set the POST request with the valid request body","match":{"location":"stepDefinitions.createUserStepDefinition.admin_set_the_post_request_with_the_valid_request_body_and_valid_endpoint()"},"keyword":"Given "},{"result":{"duration":1136035000,"status":"passed"},"line":8,"name":"Admin sends HTTPS Request and request Body with endpoint","match":{"location":"stepDefinitions.createUserStepDefinition.admin_sends_https_request_and_request_body_with_endpoint()"},"keyword":"When "},{"result":{"duration":3202000,"status":"passed"},"line":9,"name":"Admin receives \"201\" \"Created\" Status","match":{"arguments":[{"val":"\"201\"","offset":15},{"val":"\"Created\"","offset":21}],"location":"stepDefinitions.createUserStepDefinition.admin_receives_status(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@doing"}]}],"name":"Create User API","description":"","id":"create-user-api","keyword":"Feature","uri":"file:src/test/resources/features/02_createUser.feature","tags":[]},{"line":3,"elements":[{"start_timestamp":"2025-02-08T23:25:32.753Z","before":[{"result":{"duration":146000,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":11,"name":"Check if Admin is able to update a user with No Auth","description":"","id":"update-user-api;check-if-admin-is-able-to-update-a-user-with-no-auth","after":[{"result":{"duration":108000,"status":"passed"},"match":{"location":"hooks.Hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":3222000,"status":"passed"},"line":12,"name":"Admin set the PUT request with the valid request body with no Auth","match":{"location":"stepDefinitions.updateUserStepDefinition.admin_set_the_put_request_with_the_valid_request_body_with_no_auth()"},"keyword":"Given "},{"result":{"duration":98083000,"status":"passed"},"line":13,"name":"Admin sends HTTPS Request and update request Body with no or invalid auth","match":{"location":"stepDefinitions.updateUserStepDefinition.admin_sends_https_request_and_update_request_body_with_no_or_invalid_auth()"},"keyword":"When "},{"result":{"duration":717000,"status":"passed"},"line":14,"name":"Admin receives \"401\" \"Unauthorized\" Status for update","match":{"arguments":[{"val":"\"401\"","offset":15},{"val":"\"Unauthorized\"","offset":21}],"location":"stepDefinitions.updateUserStepDefinition.admin_receives_status_for_update(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@doing"}]},{"start_timestamp":"2025-02-08T23:25:32.862Z","before":[{"result":{"duration":142000,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":16,"name":"Check if Admin is able to update a user with invalid basic auth","description":"","id":"update-user-api;check-if-admin-is-able-to-update-a-user-with-invalid-basic-auth","after":[{"result":{"duration":162000,"status":"passed"},"match":{"location":"hooks.Hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":466000,"status":"passed"},"line":17,"name":"Admin set the PUT request with the valid request body with invalid basic Auth","match":{"location":"stepDefinitions.updateUserStepDefinition.admin_set_the_put_request_with_the_valid_request_body_with_invalid_basic_auth()"},"keyword":"Given "},{"result":{"duration":170760000,"status":"passed"},"line":18,"name":"Admin sends HTTPS Request and update request Body with no or invalid auth","match":{"location":"stepDefinitions.updateUserStepDefinition.admin_sends_https_request_and_update_request_body_with_no_or_invalid_auth()"},"keyword":"When "},{"result":{"duration":383000,"status":"passed"},"line":19,"name":"Admin receives \"401\" \"Unauthorized\" Status for update","match":{"arguments":[{"val":"\"401\"","offset":15},{"val":"\"Unauthorized\"","offset":21}],"location":"stepDefinitions.updateUserStepDefinition.admin_receives_status_for_update(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@doing"}]}],"name":"Update User API","description":"","id":"update-user-api","keyword":"Feature","uri":"file:src/test/resources/features/04_updateUser.feature","tags":[]},{"line":3,"elements":[{"start_timestamp":"2025-02-08T23:25:33.045Z","before":[{"result":{"duration":173000,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":6,"name":"Check if Admin is able to DELETE user by valid USER ID","description":"","id":"delete-user-by-userid-api;check-if-admin-is-able-to-delete-user-by-valid-user-id","after":[{"result":{"duration":142000,"status":"passed"},"match":{"location":"hooks.Hooks.tearDown()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":470000,"status":"passed"},"line":7,"name":"Admin set the DELETE request by user id","match":{"location":"stepDefinitions.deleteUserStepDefinition.admin_set_the_delete_request_by_user_id()"},"keyword":"Given "},{"result":{"duration":173232000,"status":"passed"},"line":8,"name":"Admin sends the DELETE HTTP request by User ID","match":{"location":"stepDefinitions.deleteUserStepDefinition.admin_sends_the_delete_http_request_by_user_id()"},"keyword":"When "},{"result":{"duration":6490000,"status":"passed"},"line":9,"name":"Admin receives the \"200\" \"OK\" Status code with message","match":{"arguments":[{"val":"\"200\"","offset":19},{"val":"\"OK\"","offset":25}],"location":"stepDefinitions.deleteUserStepDefinition.admin_receives_the_status_code_with_message(java.lang.String,java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@doing"}]}],"name":"Delete User By UserID API","description":"","id":"delete-user-by-userid-api","keyword":"Feature","uri":"file:src/test/resources/features/06_deleteUserByUserID.feature","tags":[]}]